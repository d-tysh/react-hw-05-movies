{"version":3,"file":"static/js/847.102149e7.chunk.js","mappings":"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","sources":["pages/MovieDetails.js","services/getMoviesInfo.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from \"react\";\nimport { Link, NavLink, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieInfo } from \"services/getMoviesInfo\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n        setLoading(true);\n        getMovieInfo(movieId)\n            .then(movie => {\n                setLoading(false)\n                setMovie(movie);\n            })\n            .catch(() => setError(true))\n            .finally(() => setLoading(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div>\n            <div style={{'display': 'flex', 'gap': '8px', 'alignItems': 'center'}}>\n                <button>\n                    <NavLink to={backLinkRef.current} style={{'textDecoration': 'none'}}>‚Üê Go back</NavLink>\n                </button>\n                <h2>Movie Details</h2>\n            </div>\n            {loading && <div>Loading...</div>}\n            {error && <div>Oops, something went wrong...</div>}\n            {!loading && !error && movie && <div style={{ 'display': 'flex', 'gap': '12px', 'borderBottom': '1px solid grey', 'paddingBottom': '8px' }}>\n                <img src={`https://image.tmdb.org/t/p/w300/${movie['poster_path']}`} alt={movie.title} width='300px' style={{ 'display': 'block' }} />\n                <section>\n                    <h2>{movie.title}</h2>\n                    <p>User Score: {Math.floor(movie['vote_average'] * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                </section>\n            </div>}\n            <div>\n                <h3>Additional information</h3>\n                <ul style={{'paddingBottom': '12px', 'borderBottom': '1px solid grey'}}>\n                    <li><Link to={`/movies/${movieId}/cast`}>Cast</Link></li>\n                    <li><Link to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\n                </ul>\n            </div>\n            <Suspense>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '376bdebe42e07e1ce735b7444b0a16bb';\n\nexport const getMovies = async (moviesType) => {\n    return await fetch(`${BASE_URL}/movie/${moviesType}?api_key=${API_KEY}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status, response.statusText);\n            }\n\n            return response.json();\n        })\n}\n\nexport const getMovieInfo = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieReviews = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMoviesBySearch = async (query) => {\n   return await fetch(`${BASE_URL}/search/movie?query=${query}}&include_adult=false&page=1&api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}"],"names":["useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieInfo","then","catch","finally","style","NavLink","to","current","src","alt","title","width","Math","floor","overview","Link","Suspense","BASE_URL","API_KEY","getMovies","moviesType","fetch","response","ok","Error","status","statusText","json","getMovieCast","getMovieReviews","getMoviesBySearch","query"],"sourceRoot":""}