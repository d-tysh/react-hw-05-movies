{"version":3,"file":"static/js/764.149a727e.chunk.js","mappings":"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","sources":["pages/Movies.js","services/getMoviesInfo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMoviesBySearch } from \"services/getMoviesInfo\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const query = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (query) {\n            setLoading(true);\n            getMoviesBySearch(query)\n                .then(data => {\n                    setLoading(false);\n                    setMovies(data.results);\n                })\n                .catch(() => setError(true))\n                .finally(() => setLoading(false));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const updateSearchParams = (e) => {\n        setSearchParams(e.target.value ? { query: e.target.value } : {});\n    }\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n\n        if (!query.length) {\n            alert('Enter search query');\n            return;\n        }\n\n        setLoading(true);\n        getMoviesBySearch(query)\n            .then(data => {\n                if (!data.results.length) {\n                    alert(`No data for query '${query}'`);\n                }\n                setLoading(false);\n                setMovies(data.results);\n            })\n            .catch(() => setError(true))\n            .finally(() => setLoading(false));\n    }\n\n    return (\n        <>\n            <form action=\"submit\" onSubmit={searchMovies} style={{ margin: '20px' }}>\n                <input type=\"text\" value={query} onChange={updateSearchParams} />\n                <button style={{ cursor: \"pointer\" }}>Search</button>\n            </form>\n            {loading && <div>Loading...</div>}\n            {error && <div>Oops, something went wrong...</div>}\n            {!loading && !error && movies &&\n                <ul>\n                    {movies.map(movie => <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n                    </li>)}\n                </ul>\n            }\n        </>\n    )\n}\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '376bdebe42e07e1ce735b7444b0a16bb';\n\nexport const getMovies = async (moviesType) => {\n    return await fetch(`${BASE_URL}/movie/${moviesType}?api_key=${API_KEY}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status, response.statusText);\n            }\n\n            return response.json();\n        })\n}\n\nexport const getMovieInfo = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieReviews = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMoviesBySearch = async (query) => {\n   return await fetch(`${BASE_URL}/search/movie?query=${query}}&include_adult=false&page=1&api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesBySearch","then","data","results","catch","finally","action","onSubmit","e","preventDefault","length","alert","style","margin","type","value","onChange","target","cursor","map","movie","Link","to","id","state","from","title","BASE_URL","API_KEY","getMovies","moviesType","fetch","response","ok","Error","status","statusText","json","getMovieInfo","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}