{"version":3,"file":"static/js/125.a8f15f1b.chunk.js","mappings":"6OAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,QAAPD,CAAH,8F,SCAVE,EAAa,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACnCC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,iCACI,2CACEH,IAAW,wCACXC,IAAS,2DAEPF,IACA,wBACKA,EAAOK,KAAI,SAAAC,GAAK,OAAI,yBACjB,SAACV,EAAD,CACIW,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAACC,KAAMP,GAFlB,SAIKG,EAAMK,SALeL,EAAME,GAAnB,QAYpC,ECAD,EAtBa,WACT,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOX,EAAP,KAAgBa,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOV,EAAP,KAAca,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACNF,GAAW,IACXG,EAAAA,EAAAA,IAAU,WACTC,MAAK,SAAAC,GACFL,GAAW,GACXD,EAAUM,EAAKC,QAAQC,MAAM,EAAG,IACnC,IACAC,OAAM,kBAAMP,GAAS,EAAf,GACV,GAAE,KAGC,+BACI,SAAChB,EAAD,CAAYC,OAAQA,EAAQC,QAASA,EAASC,MAAOA,KAGhE,C,sLCxBKqB,EAAW,+BACXC,EAAU,mCAEHP,EAAS,mCAAG,WAAOQ,GAAP,iFACRC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBE,EAAtB,oBAA4CD,IACzDN,MAAK,SAAAS,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IARgB,mFAAH,sDAWTC,EAAY,mCAAG,WAAOC,GAAP,iFACXR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,oBAAyCV,IAC1DN,MAAK,SAAAS,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IARuB,mFAAH,sDAWZG,EAAY,mCAAG,WAAOD,GAAP,iFACXR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IAClEN,MAAK,SAAAS,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IARuB,mFAAH,sDAWZI,EAAe,mCAAG,WAAOF,GAAP,iFACdR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IAClEN,MAAK,SAAAS,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IAR0B,mFAAH,sDAWfK,EAAiB,mCAAG,WAAOC,GAAP,iFAGhBZ,MAAM,GAAD,OAAIH,EAAJ,+BAAmCe,EAAnC,gDAAgFd,IACjGN,MAAK,SAAAS,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IAV4B,mFAAH,qD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home.js","services/getMoviesInfo.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    color: black;\n\n    &:hover {\n        color: orangered;\n    }\n`;","import { useLocation } from \"react-router-dom\"\nimport { StyledLink } from \"./MoviesList.styled\"\n\nexport const MoviesList = ({movies, loading, error}) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <h2>Trending today</h2>\n            { loading && <div>Loading...</div> }\n            { error && <div>Oops, something went wrong...</div> }\n            {\n                movies && \n                <ul>\n                    {movies.map(movie => <li key={movie.id}>\n                        <StyledLink\n                            to={`/movies/${movie.id}`}\n                            state={{from: location}}\n                        >\n                            {movie.title}\n                        </StyledLink>\n                    </li>)}\n                </ul>\n            }\n        </>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { getMovies } from \"services/getMoviesInfo\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n        setLoading(true);\n        getMovies('popular')\n        .then(data => {\n            setLoading(false);\n            setMovies(data.results.slice(0, 20))\n        })\n        .catch(() => setError(true));\n    }, []);\n\n    return (\n        <>\n            <MoviesList movies={movies} loading={loading} error={error} />\n        </>\n    )\n};\n\nexport default Home;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '376bdebe42e07e1ce735b7444b0a16bb';\n\nexport const getMovies = async (moviesType) => {\n    return await fetch(`${BASE_URL}/movie/${moviesType}?api_key=${API_KEY}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status, response.statusText);\n            }\n\n            return response.json();\n        })\n}\n\nexport const getMovieInfo = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieReviews = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMoviesBySearch = async (query) => {\n    // search/movie?query=batman&include_adult=false&language=en-US&page=1\n    // return await fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`)\n    return await fetch(`${BASE_URL}/search/movie?query=${query}}&include_adult=false&page=1&api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}"],"names":["StyledLink","styled","NavLink","MoviesList","movies","loading","error","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","setLoading","setError","useEffect","getMovies","then","data","results","slice","catch","BASE_URL","API_KEY","moviesType","fetch","response","ok","Error","status","statusText","json","getMovieInfo","movieId","getMovieCast","getMovieReviews","getMoviesBySearch","query"],"sourceRoot":""}