{"version":3,"file":"static/js/623.91376113.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js","services/getMoviesInfo.js"],"sourcesContent":["import { Oval } from \"react-loader-spinner\"\n\nexport const Loader = () => {\n    return (\n        <Oval\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            color=\"orangered\"\n            ariaLabel=\"oval-loading\"\n            wrapperStyle={{justifyContent: 'center', margin: '16px'}}\n            wrapperClass=\"\"\n        />\n    )\n}","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledMoviesList = styled.ul`\n    display: flex;\n    list-style: none;\n    gap: 24px;\n    flex-wrap: wrap;\n    justify-content: center;\n    text-align: center;\n\n`;\n\nexport const StyledListItem = styled.li`\n    width: 200px;\n    box-shadow: 0px 5px 5px 0px rgba(0,0,0,0.3);\n\n    & img {\n        width: 100%;\n        display: block;\n    }\n\n    &:hover {\n        box-shadow: 0px 10px 10px 5px rgba(0,0,0,0.3);\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    color: black;\n    text-decoration: none;\n    \n    & p {\n        font-weight: bold;\n        font-size: 20px;\n        padding: 8px 8px 16px;\n        margin: 0;\n    }\n\n    &:hover {\n        color: orangered;\n    }\n`;","import styled from \"@emotion/styled\";\n\nexport const SearchFormStyled = styled.form`\n    display: flex;\n    gap: 8px;\n    justify-content: center;\n    height: 40px;\n    margin-top: 20px;\n    \n    & input {\n        font-size: 16px;\n        width: 400px;\n        padding: 8px 12px;\n        border: 2px solid;\n        border-radius: 8px;\n\n        &:hover {\n            border-color: orangered;\n        }\n    }  \n\n    & button {\n        border: 2px solid black;\n        border-radius: 8px;\n        padding: 0 16px;\n        font-size: 20px;\n        cursor: pointer;\n\n        &:hover {\n            background-color: orangered;\n            color: #fff;\n        }\n    }\n`;","import { SearchFormStyled } from \"./SearchForm.styled\"\n\nexport const SearchForm = ({ searchMovies, updateSearchParams, query }) => {\n    return (\n        <SearchFormStyled action=\"submit\" onSubmit={searchMovies}>\n            <input type=\"text\" value={query} onChange={updateSearchParams} placeholder=\"Enter text\" />\n            <button>Search</button>\n        </SearchFormStyled>\n    )\n}","import { Loader } from \"components/Loader/Loader\";\nimport { StyledLink, StyledListItem, StyledMoviesList } from \"components/MoviesList/MoviesList.styled\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMoviesBySearch } from \"services/getMoviesInfo\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const query = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (query) {\n            setLoading(true);\n            getMoviesBySearch(query)\n                .then(data => {\n                    setLoading(false);\n                    setMovies(data.results);\n                })\n                .catch(() => setError(true))\n                .finally(() => setLoading(false));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const updateSearchParams = (e) => {\n        setSearchParams(e.target.value ? { query: e.target.value } : {});\n    }\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n\n        if (!query.length) {\n            alert('Enter search query');\n            return;\n        }\n\n        setLoading(true);\n        getMoviesBySearch(query)\n            .then(data => {\n                if (!data.results.length) {\n                    alert(`No data for query '${query}'`);\n                }\n                setLoading(false);\n                setMovies(data.results);\n            })\n            .catch(() => setError(true))\n            .finally(() => setLoading(false));\n    }\n\n    return (\n        <>\n            <SearchForm searchMovies={searchMovies} updateSearchParams={updateSearchParams} query={query} />\n            {loading && <Loader />}\n            {error && <div>Oops, something went wrong...</div>}\n            {!loading && !error && movies &&\n                <StyledMoviesList>\n                    {movies.map(movie => <StyledListItem key={movie.id}>\n                        <StyledLink to={`/movies/${movie.id}`} state={{from: location}}\n                        >\n                            <img src={`https://image.tmdb.org/t/p/w300/${movie['poster_path']}`} alt={movie.title}/>\n                            <p>{movie.title}</p>\n                        </StyledLink>\n                    </StyledListItem>)}\n                </StyledMoviesList>\n            }\n        </>\n    )\n}\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '376bdebe42e07e1ce735b7444b0a16bb';\n\nexport const getMovies = async (moviesType) => {\n    return await fetch(`${BASE_URL}/movie/${moviesType}?api_key=${API_KEY}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status, response.statusText);\n            }\n\n            return response.json();\n        })\n}\n\nexport const getMovieInfo = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieReviews = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMoviesBySearch = async (query) => {\n   return await fetch(`${BASE_URL}/search/movie?query=${query}}&include_adult=false&page=1&api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}"],"names":["Loader","visible","height","width","color","ariaLabel","wrapperStyle","justifyContent","margin","wrapperClass","StyledMoviesList","styled","StyledListItem","StyledLink","NavLink","SearchFormStyled","SearchForm","searchMovies","updateSearchParams","query","action","onSubmit","type","value","onChange","placeholder","useState","movies","setMovies","loading","setLoading","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","getMoviesBySearch","then","data","results","catch","finally","e","preventDefault","length","alert","target","map","movie","to","id","state","from","src","alt","title","BASE_URL","API_KEY","getMovies","moviesType","fetch","response","ok","Error","status","statusText","json","getMovieInfo","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}