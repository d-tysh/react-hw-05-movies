{"version":3,"file":"static/js/597.b6608a8b.chunk.js","mappings":"wKA0CA,UAtCkB,WACd,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAcP,OAZAE,EAAAA,EAAAA,YAAU,WACNL,GAAW,IACXM,EAAAA,EAAAA,IAAaH,GACRI,MAAK,SAAAC,GACFR,GAAW,GACXF,EAAQU,EAAKX,KAChB,IACAY,OAAM,kBAAMP,GAAS,EAAf,IACNQ,SAAQ,kBAAMV,GAAW,EAAjB,GAEhB,GAAE,KAGC,4BACI,iCACED,IAAW,wCACXE,IAAS,4DACRF,IAAYE,GAASJ,IAAQ,+BAC5B,eAAIc,MAAO,CAACC,QAAS,OAAQC,SAAU,OAAQC,IAAK,OAAQC,eAAgB,SAAUC,UAAW,QAAjG,SAEInB,EAAKoB,KAAI,SAAAC,GAAI,OAAI,gBAAkBP,MAAO,CAACC,QAAS,OAAQG,eAAgB,SAAUI,cAAe,SAAUC,WAAY,SAAUC,OAAQ,iBAAkBC,QAAS,MAAOC,OAAQ,WAAtK,WACb,gBAAKC,IAAKN,EAAI,aAAJ,0CAA0DA,EAAI,cAA9D,0EAA+JO,IAAKP,EAAKQ,KAAMC,MAAM,WAC/L,uBAAIT,EAAKQ,QACT,uCAAeR,EAAKU,eAHEV,EAAKW,GAAlB,UAUhC,C,sLCxCKC,EAAW,+BACXC,EAAU,mCAEHC,EAAS,mCAAG,WAAOC,GAAP,iFACRC,MAAM,GAAD,OAAIJ,EAAJ,kBAAsBG,EAAtB,oBAA4CF,IACzDxB,MAAK,SAAA4B,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IARgB,mFAAH,sDAWTC,EAAY,mCAAG,WAAOtC,GAAP,iFACX+B,MAAM,GAAD,OAAIJ,EAAJ,kBAAsB3B,EAAtB,oBAAyC4B,IAC1DxB,MAAK,SAAA4B,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IARuB,mFAAH,sDAWZlC,EAAY,mCAAG,WAAOH,GAAP,iFACX+B,MAAM,GAAD,OAAIJ,EAAJ,kBAAsB3B,EAAtB,4BAAiD4B,IAClExB,MAAK,SAAA4B,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IARuB,mFAAH,sDAWZE,EAAe,mCAAG,WAAOvC,GAAP,iFACd+B,MAAM,GAAD,OAAIJ,EAAJ,kBAAsB3B,EAAtB,4BAAiD4B,IAClExB,MAAK,SAAA4B,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IAR0B,mFAAH,sDAWfG,EAAiB,mCAAG,WAAOC,GAAP,iFACjBV,MAAM,GAAD,OAAIJ,EAAJ,+BAAmCc,EAAnC,gDAAgFb,IAChGxB,MAAK,SAAA4B,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,OAAQH,EAASI,YAG9C,OAAOJ,EAASK,MACnB,IAR4B,mFAAH,qD","sources":["components/MovieCast/MovieCast.js","services/getMoviesInfo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"services/getMoviesInfo\";\n\nconst MovieCast = () => {\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        setLoading(true);\n        getMovieCast(movieId)\n            .then(data => {\n                setLoading(false);\n                setCast(data.cast);\n            })\n            .catch(() => setError(true))\n            .finally(() => setLoading(false))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div>\n            <h3>Cast</h3>\n            { loading && <div>Loading...</div> }\n            { error && <div>Oops, something went wrong...</div> }\n            { !loading && !error && cast && <>\n                <ul style={{display: 'flex', flexWrap: 'wrap', gap: '16px', justifyContent: 'center', listStyle: 'none' }}>\n                {\n                    cast.map(item => <li key={item.id} style={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: \"center\", border: '1px solid grey', padding: '4px', cursor: 'pointer'}}>\n                        <img src={item['profile_path'] ? `https://image.tmdb.org/t/p/w300/${item['profile_path']}` :  `https://lightwidget.com/wp-content/uploads/localhost-file-not-found.jpg`} alt={item.name} width='100px' />\n                        <p>{item.name}</p>\n                        <p>Character: {item.character}</p>\n                    </li>)\n                }\n            </ul>\n            </> }\n        </div>\n    )\n}\n\nexport default MovieCast;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '376bdebe42e07e1ce735b7444b0a16bb';\n\nexport const getMovies = async (moviesType) => {\n    return await fetch(`${BASE_URL}/movie/${moviesType}?api_key=${API_KEY}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status, response.statusText);\n            }\n\n            return response.json();\n        })\n}\n\nexport const getMovieInfo = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieReviews = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMoviesBySearch = async (query) => {\n   return await fetch(`${BASE_URL}/search/movie?query=${query}}&include_adult=false&page=1&api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}"],"names":["useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieCast","then","data","catch","finally","style","display","flexWrap","gap","justifyContent","listStyle","map","item","flexDirection","alignItems","border","padding","cursor","src","alt","name","width","character","id","BASE_URL","API_KEY","getMovies","moviesType","fetch","response","ok","Error","status","statusText","json","getMovieInfo","getMovieReviews","getMoviesBySearch","query"],"sourceRoot":""}