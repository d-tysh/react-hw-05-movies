{"version":3,"file":"static/js/755.3a2eb01c.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js","services/getMoviesInfo.js"],"sourcesContent":["import { Oval } from \"react-loader-spinner\"\n\nexport const Loader = () => {\n    return (\n        <Oval\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            color=\"orangered\"\n            ariaLabel=\"oval-loading\"\n            wrapperStyle={{justifyContent: 'center', margin: '16px'}}\n            wrapperClass=\"\"\n        />\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const InfoStyled = styled.div`\n    display: flex;\n    gap: 12px;\n    border-bottom: 4px dashed grey;\n    padding-bottom: 8px;\n    font-weight: bold;\n\n    & img {\n        width: 300px;\n        display: block; \n    }\n`;\n\nexport const AddInfoStyled = styled.div`\n    padding-bottom: 12px;\n    border-bottom: 4px dotted grey; \n    font-weight: bold;\n`;\n\nexport const MovieNav = styled.div`\n    display: flex;\n    gap: 8px;\n    align-items: center;\n\n    & a {\n        text-decoration: none;\n        color: black;\n        border: 2px solid black;\n        border-radius: 8px;\n        font-size: 16px;\n        font-weight: bold;\n        padding: 4px 8px;\n\n        &:hover {\n            background-color: orangered;\n            color: #fff;\n        }\n    }\n`;","import { Link, NavLink } from \"react-router-dom\"\nimport { AddInfoStyled, InfoStyled, MovieNav } from \"./MovieInfo.styled\"\n\nexport const MovieInfo = ({ movie, movieId, backLinkRef }) => {\n    return (\n        <>\n            <MovieNav>\n                <NavLink to={backLinkRef.current}>‚Üê Go back</NavLink>\n                <h2>Movie Details</h2>\n            </MovieNav>\n            <InfoStyled style={{}}>\n                <img src={`https://image.tmdb.org/t/p/w300/${movie['poster_path']}`} alt={movie.title} />\n                <section>\n                    <h2>{movie.title}</h2>\n                    <p>User Score: {Math.floor(movie['vote_average'] * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                </section>\n            </InfoStyled>\n            <AddInfoStyled>\n                <h3>Additional information</h3>\n                <ul>\n                    <li><Link to={`/movies/${movieId}/cast`}>Cast</Link></li>\n                    <li><Link to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\n                </ul>\n            </AddInfoStyled>\n        </>\n    )\n}","import { Loader } from \"components/Loader/Loader\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { Suspense, useEffect, useRef, useState } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieInfo } from \"services/getMoviesInfo\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n        setLoading(true);\n        getMovieInfo(movieId)\n            .then(movie => {\n                setLoading(false)\n                setMovie(movie);\n            })\n            .catch(() => setError(true))\n            .finally(() => setLoading(false));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div>\n            {loading && <Loader />}\n            {error && <div>Oops, something went wrong...</div>}\n            {!loading && !error && movie && <MovieInfo movie={movie} movieId={movieId} backLinkRef={backLinkRef} />}\n            <Suspense>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '376bdebe42e07e1ce735b7444b0a16bb';\n\nexport const getMovies = async (moviesType) => {\n    return await fetch(`${BASE_URL}/movie/${moviesType}?api_key=${API_KEY}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status, response.statusText);\n            }\n\n            return response.json();\n        })\n}\n\nexport const getMovieInfo = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMovieReviews = async (movieId) => {\n    return await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}\n\nexport const getMoviesBySearch = async (query) => {\n   return await fetch(`${BASE_URL}/search/movie?query=${query}}&include_adult=false&page=1&api_key=${API_KEY}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status, response.statusText);\n        }\n\n        return response.json();\n    })\n}"],"names":["Loader","visible","height","width","color","ariaLabel","wrapperStyle","justifyContent","margin","wrapperClass","InfoStyled","styled","AddInfoStyled","MovieNav","MovieInfo","movie","movieId","backLinkRef","NavLink","to","current","style","src","alt","title","Math","floor","overview","Link","useState","setMovie","loading","setLoading","error","setError","useParams","location","useLocation","useRef","state","from","useEffect","getMovieInfo","then","catch","finally","Suspense","BASE_URL","API_KEY","getMovies","moviesType","fetch","response","ok","Error","status","statusText","json","getMovieCast","getMovieReviews","getMoviesBySearch","query"],"sourceRoot":""}